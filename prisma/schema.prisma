
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Characters {
  charactersId   Int     @id @default(autoincrement()) @map("charactersId")
  charactersName String  @unique @map("charactersName")
  info          String? @map("info") @db.Text
  
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  
  inventory   Inventory[] 

  @@map("Characters")
}

model Item {
  itemId        Int     @id @default(autoincrement()) @map("itemId")  
  inventoryId   Int?     @map("inventoryId")
  itemName      String  @map("itemName")
  price         Int     @default(1000) @map("price")
  info          String? @map("info") @db.Text

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  
  inventory Inventory? @relation(fields: [inventoryId], references: [inventoryId], onDelete: Cascade)

  @@map("Item")
}


model Inventory {
  inventoryId   Int     @id @default(autoincrement()) @map("inventoryId")  
  charactersId   Int     @unique @map("characterId")
  inventoryName String  @map("inventoryName")
  info          String? @map("info") @db.Text

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  character Characters @relation(fields: [charactersId], references: [charactersId], onDelete: Cascade)
  
  item Item[]

  @@map("Inventory")
}



  // character Character @relation(fields: [characterId], references: [characterId], onDelete: Cascade)
  // characterId  Int 
  // @@map("Item")